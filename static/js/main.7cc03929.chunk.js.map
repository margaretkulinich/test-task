{"version":3,"sources":["containers/DevTools.js","components/Header.js","components/CardList/styles.js","components/Card/helpers.js","components/Card/styles.js","components/Card/Card.js","components/CardList/CardList.js","getScooters.js","actions/cart.js","containers/App.js","containers/Root.js","middleware/api.js","reducers/cart.js","reducers/index.js","index.js","store/configureStore.js"],"names":["createDevTools","toggleVisibilityKey","changePositionKey","styled","header","CardContainer","ul","classes","CardItem","li","Card","cents","itemId","imgSrc","name","price","addCardItemToCart","src","className","console","error","toFixed","onClick","bind","scooters","id","image","CardList","dispatch","useDispatch","type","payload","quantity","addToCart","map","GlobalStyle","createGlobalStyle","App","Header","Root","store","path","component","DevTools","API_ROOT","userSchema","schema","Entity","idAttribute","user","login","toLowerCase","CALL_API","owner","repo","fullName","next","action","callAPI","endpoint","types","getState","Error","Array","isArray","length","every","actionWith","data","finalAction","Object","assign","requestType","successType","failureType","fullUrl","indexOf","fetch","then","response","json","ok","Promise","reject","camelizedJson","camelizeKeys","nextPageUrl","link","headers","get","nextLink","split","find","s","trim","slice","getNextPageUrl","normalize","callApi","message","DEFAULT_CART_STATE","lineItems","rootReducer","combineReducers","cart","state","newLineItems","foundIndex","findIndex","item","push","preloadedState","createStore","compose","applyMiddleware","thunk","api","createLogger","instrument","configureStore","render","document","getElementById"],"mappings":"2OAKeA,2BACb,cAAC,IAAD,CAAaC,oBAAoB,SACpBC,kBAAkB,SAD/B,SAEE,cAAC,IAAD,O,uBCNWC,MAAOC,OAAtB,kFCAaC,EAAgBF,IAAOG,GAAV,kRCFnB,I,ECEMC,EACK,gBADLA,EAEC,YAFDA,EAGE,aAGFC,EAAWL,IAAOM,GAAV,0xBAUdF,EAMAA,EAWAA,GChCA,SAASG,EAAT,GAAmE,IFHtCC,EEGbC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,kBAChD,OACI,eAACR,EAAD,WACI,8BACI,qBAAKS,IAAKJ,EAAQK,UAAWX,MAEjC,sBAAKW,UAAWX,EAAhB,UACI,8BAAMO,IACN,qCFXoBH,EEWOI,EFVlB,kBAAVJ,GACPQ,QAAQC,MAAM,0BAEP,OAGHT,EAAQ,KAAKU,QAAQ,OEKjB,wBACIH,UAAWX,EACXe,QAASN,EAAkBO,KAAK,KAAMX,GAF1C,uBCNhB,I,EAAMY,ECLG,CACL,CACEC,GAAI,EACJX,KAAM,cACNC,MAAO,IACPW,MAAO,wBAET,CACED,GAAI,EACJX,KAAM,eACNC,MAAO,KACPW,MAAO,wBAET,CACED,GAAI,EACJX,KAAM,iBACNC,MAAO,KACPW,MAAO,wBAET,CACED,GAAI,EACJX,KAAM,gBACNC,MAAO,IACPW,MAAO,yBDhBN,SAASC,IACZ,IAAMC,EAAWC,wBAEXb,EAAoB,SAACJ,GACvBgB,EEZD,SAAmBhB,GACxB,MAAO,CACLkB,KAAM,cACNC,QAAS,CAAEnB,SAAQoB,SAHyB,uDAAH,IFY5BC,CAAUrB,KAGvB,OACI,cAACP,EAAD,UACKmB,EAASU,KAAI,gBAAGT,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOW,EAApB,EAAoBA,MAApB,OACV,cAAChB,EAAD,CAEIE,OAAQa,EACRX,KAAMA,EACNC,MAAOA,EACPF,OAAQa,EACRV,kBAAmBA,GALdS,QGdzB,IAAMU,EAAcC,YAAH,0OAUF,SAASC,IACtB,OACE,qCACE,cAACF,EAAD,IACA,cAACG,EAAD,iCACA,cAACX,EAAD,OCbN,IAaeY,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,cAAC,WAAD,CAAUA,MAAOA,EAAjB,SACE,gCACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWL,IAC3B,cAACM,EAAD,U,oDCOAC,EAAW,0BAsCXC,EAAa,IAAIC,IAAOC,OAAO,QAAS,GAAI,CAChDC,YAAa,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,iBAkBrBC,GAfM,IAAIN,IAAOC,OAAO,QAAS,CAC5CM,MAAOR,GACN,CACDG,YAAa,SAAAM,GAAI,OAAIA,EAAKC,SAASJ,iBAYb,YAIT,WAAAX,GAAK,OAAI,SAAAgB,GAAI,OAAI,SAAAC,GAC9B,IAAMC,EAAUD,EAAOL,GACvB,GAAuB,qBAAZM,EACT,OAAOF,EAAKC,GAGd,IAAME,EAAaD,EAAbC,SACEb,EAAkBY,EAAlBZ,OAAQc,EAAUF,EAAVE,MAMhB,GAJwB,oBAAbD,IACTA,EAAWA,EAASnB,EAAMqB,aAGJ,kBAAbF,EACT,MAAM,IAAIG,MAAM,kCAElB,IAAKhB,EACH,MAAM,IAAIgB,MAAM,wCAElB,IAAKC,MAAMC,QAAQJ,IAA2B,IAAjBA,EAAMK,OACjC,MAAM,IAAIH,MAAM,4CAElB,IAAKF,EAAMM,OAAM,SAAApC,GAAI,MAAoB,kBAATA,KAC9B,MAAM,IAAIgC,MAAM,wCAGlB,IAAMK,EAAa,SAAAC,GACjB,IAAMC,EAAcC,OAAOC,OAAO,GAAId,EAAQW,GAE9C,cADOC,EAAYjB,GACZiB,GAGT,cAAkDT,EAAlD,GAAQY,EAAR,KAAqBC,EAArB,KAAkCC,EAAlC,KAGA,OAFAlB,EAAKW,EAAW,CAAErC,KAAM0C,KA1FV,SAACb,EAAUb,GACzB,IAAM6B,GAA2C,IAAhChB,EAASiB,QAAQhC,GAAoBA,EAAWe,EAAWA,EAE5E,OAAOkB,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OACZA,EAASC,OAAOF,MAAK,SAAAE,GACnB,IAAKD,EAASE,GACZ,OAAOC,QAAQC,OAAOH,GAGxB,IAAMI,EAAgBC,uBAAaL,GAC7BM,EA7BS,SAAAP,GACrB,IAAMQ,EAAOR,EAASS,QAAQC,IAAI,QAClC,IAAKF,EACH,OAAO,KAGT,IAAMG,EAAWH,EAAKI,MAAM,KAAKC,MAAK,SAAAC,GAAC,OAAIA,EAAEjB,QAAQ,eAAiB,KACtE,OAAKc,EAIEA,EAASI,OAAOH,MAAM,KAAK,GAAGI,MAAM,GAAI,GAHtC,KAqBiBC,CAAejB,GAEnC,OAAOT,OAAOC,OAAO,GACnB0B,YAAUb,EAAetC,GACzB,CAAEwC,sBA6EHY,CAAQvC,EAAUb,GAAQgC,MAC/B,SAAAC,GAAQ,OAAIvB,EAAKW,EAAW,CAC1BY,WACAjD,KAAM2C,QAER,SAAArD,GAAK,OAAIoC,EAAKW,EAAW,CACvBrC,KAAM4C,EACNtD,MAAOA,EAAM+E,SAAW,kC,QCzHxBC,EAAqB,CACzBC,UAAW,ICEb,IAIeC,EAJKC,YAAgB,CAClCC,KDAa,WAA0D,IAArCC,EAAoC,uDAA5BL,EAAoB3C,EAAQ,uCACtE,OAAQA,EAAO3B,MACb,IAAK,cACH,IAAM4E,EAAeD,EAAMJ,UAAUN,QAC/BY,EAAaF,EAAMJ,UAAUO,WAAU,SAACC,GAAD,OAC3CA,EAAKjG,SAAW6C,EAAO1B,QAAQnB,UAOjC,OAJiB,IAAhB+F,EACGD,EAAaC,GAAY3E,UAAYyB,EAAO1B,QAAQC,SACpD0E,EAAaI,KAAKrD,EAAO1B,SAEtB,2BACF0E,GADL,IAEEJ,UAAWK,IAGf,QACE,OAAOD,MEhBPjE,ECCiB,SAACuE,GActB,OAbcC,YACZV,EACAS,EACAE,YAAQC,YAAgBC,IAAOC,EAAKC,0BAAiB1E,EAAS2E,eDLpDC,GAEdC,iBACE,cAAC,IAAD,UACE,cAAC,EAAD,CAAMhF,MAAOA,MAEfiF,SAASC,eAAe,W","file":"static/js/main.7cc03929.chunk.js","sourcesContent":["import React from 'react'\nimport { createDevTools } from 'redux-devtools'\nimport LogMonitor from 'redux-devtools-log-monitor'\nimport DockMonitor from 'redux-devtools-dock-monitor'\n\nexport default createDevTools(\n  <DockMonitor toggleVisibilityKey=\"ctrl-h\"\n               changePositionKey=\"ctrl-w\">\n    <LogMonitor />\n  </DockMonitor>\n)\n","import styled from \"styled-components\";\n\nexport default styled.header`\n  padding: 1em;\n  border-bottom: 1px solid #dcdcdc;\n`;\n","import styled from \"styled-components\";\r\n\r\nexport const CardContainer = styled.ul`\r\n    margin: auto;\r\n    max-width: 850px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding-top: 15px;\r\n    padding-left: 20px;\r\n\r\n    @media (max-width: 424px) {\r\n        width: 100%;\r\n    }\r\n`","export const getDollarsFromCents = (cents) =>  {\r\n    if (typeof cents !== 'number') {\r\n        console.error('Price is not a number!');\r\n        \r\n        return null;\r\n    }\r\n\r\n    return (cents / 100).toFixed(2);\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const classes = {\r\n    productImage: 'product-image',\r\n    cardInfo: 'card-info',\r\n    addButton: 'add-button',\r\n};\r\n\r\nexport const CardItem = styled.li`\r\n    width: 300px;\r\n    height: 300px;\r\n    border: 3px solid grey;\r\n    margin: 20px 50px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    .${classes.productImage} {\r\n        max-width: 150px;\r\n        max-height: 150px;\r\n        object-fit: contain;\r\n    }\r\n\r\n    .${classes.cardInfo} {\r\n        width: 50%;\r\n        height: 40%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-around;\r\n        align-items: inherit;\r\n        font-size: 22px;\r\n        font-weight: 500;\r\n    }\r\n\r\n    .${classes.addButton} {\r\n        padding: 10px;\r\n        width: 50px;\r\n        font-size: 18px;\r\n        font-weight: 400;\r\n        width: 80%;\r\n    }\r\n\r\n    @media (max-width: 424px) {\r\n        flex-direction: column;\r\n    }\r\n`","import { getDollarsFromCents } from \"./helpers\";\r\nimport { CardItem, classes } from \"./styles\";\r\n\r\nexport function Card({ itemId, imgSrc, name, price, addCardItemToCart }) {\r\n    return(\r\n        <CardItem>\r\n            <div>\r\n                <img src={imgSrc} className={classes.productImage}></img>\r\n            </div>\r\n            <div className={classes.cardInfo}>\r\n                <div>{name}</div>\r\n                <div>${getDollarsFromCents(price)}</div>\r\n                <button\r\n                    className={classes.addButton}\r\n                    onClick={addCardItemToCart.bind(null, itemId)}\r\n                >Add</button>\r\n            </div>\r\n        </CardItem>\r\n    )\r\n}","import { CardContainer } from \"./styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToCart } from '../../actions/cart';\r\nimport getScooters from '../../getScooters';\r\nimport { Card } from \"../Card/Card\";\r\n\r\nconst scooters = getScooters();\r\n\r\nexport function CardList() {\r\n    const dispatch = useDispatch();\r\n\r\n    const addCardItemToCart = (itemId) => {\r\n        dispatch(addToCart(itemId));\r\n    };\r\n\r\n    return (\r\n        <CardContainer>\r\n            {scooters.map(({ id, name, price, image }) => (\r\n                <Card\r\n                    key={id}\r\n                    itemId={id}\r\n                    name={name}\r\n                    price={price}\r\n                    imgSrc={image}\r\n                    addCardItemToCart={addCardItemToCart}\r\n                />\r\n            ))}\r\n        </CardContainer>\r\n    )\r\n};\r\n\r\n","export default function getScooters() {\n  return [\n    {\n      id: 1,\n      name: \"Red Scooter\",\n      price: 2000,\n      image: \"/assets/product1.png\"\n    },\n    {\n      id: 2,\n      name: \"Seat Scooter\",\n      price: 2250,\n      image: \"/assets/product2.png\"\n    },\n    {\n      id: 3,\n      name: \"Purple Scooter\",\n      price: 2500,\n      image: \"/assets/product3.png\"\n    },\n    {\n      id: 4,\n      name: \"Turbo Scooter\",\n      price: 3000,\n      image: \"/assets/product4.png\"\n    }\n  ];\n}\n","export function addToCart(itemId, quantity = 1) {\n  return {\n    type: \"ADD_TO_CART\",\n    payload: { itemId, quantity }\n  };\n}\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { CardList } from \"../components/CardList/CardList\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, #root, #root > div {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}`;\n\nexport default function App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Header>E-Scooter Emporium</Header>\n      <CardList />\n    </>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Provider } from \"react-redux\";\nimport DevTools from \"./DevTools\";\nimport { Route } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <div>\n      <Route path=\"/\" component={App} />\n      <DevTools />\n    </div>\n  </Provider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired\n};\n\nexport default Root;\n","import { normalize, schema } from 'normalizr'\nimport { camelizeKeys } from 'humps'\n\n// Extracts the next page URL from Github API response.\nconst getNextPageUrl = response => {\n  const link = response.headers.get('link')\n  if (!link) {\n    return null\n  }\n\n  const nextLink = link.split(',').find(s => s.indexOf('rel=\"next\"') > -1)\n  if (!nextLink) {\n    return null\n  }\n\n  return nextLink.trim().split(';')[0].slice(1, -1)\n}\n\nconst API_ROOT = 'https://api.github.com/'\n\n// Fetches an API response and normalizes the result JSON according to schema.\n// This makes every API response have the same shape, regardless of how nested it was.\nconst callApi = (endpoint, schema) => {\n  const fullUrl = (endpoint.indexOf(API_ROOT) === -1) ? API_ROOT + endpoint : endpoint\n\n  return fetch(fullUrl)\n    .then(response =>\n      response.json().then(json => {\n        if (!response.ok) {\n          return Promise.reject(json)\n        }\n\n        const camelizedJson = camelizeKeys(json)\n        const nextPageUrl = getNextPageUrl(response)\n\n        return Object.assign({},\n          normalize(camelizedJson, schema),\n          { nextPageUrl }\n        )\n      })\n    )\n}\n\n// We use this Normalizr schemas to transform API responses from a nested form\n// to a flat form where repos and users are placed in `entities`, and nested\n// JSON objects are replaced with their IDs. This is very convenient for\n// consumption by reducers, because we can easily build a normalized tree\n// and keep it updated as we fetch more data.\n\n// Read more about Normalizr: https://github.com/paularmstrong/normalizr\n\n// GitHub's API may return results with uppercase letters while the query\n// doesn't contain any. For example, \"someuser\" could result in \"SomeUser\"\n// leading to a frozen UI as it wouldn't find \"someuser\" in the entities.\n// That's why we're forcing lower cases down there.\n\nconst userSchema = new schema.Entity('users', {}, {\n  idAttribute: user => user.login.toLowerCase()\n})\n\nconst repoSchema = new schema.Entity('repos', {\n  owner: userSchema\n}, {\n  idAttribute: repo => repo.fullName.toLowerCase()\n})\n\n// Schemas for Github API responses.\nexport const Schemas = {\n  USER: userSchema,\n  USER_ARRAY: [userSchema],\n  REPO: repoSchema,\n  REPO_ARRAY: [repoSchema]\n}\n\n// Action key that carries API call info interpreted by this Redux middleware.\nexport const CALL_API = 'Call API'\n\n// A Redux middleware that interprets actions with CALL_API info specified.\n// Performs the call and promises when such actions are dispatched.\nexport default store => next => action => {\n  const callAPI = action[CALL_API]\n  if (typeof callAPI === 'undefined') {\n    return next(action)\n  }\n\n  let { endpoint } = callAPI\n  const { schema, types } = callAPI\n\n  if (typeof endpoint === 'function') {\n    endpoint = endpoint(store.getState())\n  }\n\n  if (typeof endpoint !== 'string') {\n    throw new Error('Specify a string endpoint URL.')\n  }\n  if (!schema) {\n    throw new Error('Specify one of the exported Schemas.')\n  }\n  if (!Array.isArray(types) || types.length !== 3) {\n    throw new Error('Expected an array of three action types.')\n  }\n  if (!types.every(type => typeof type === 'string')) {\n    throw new Error('Expected action types to be strings.')\n  }\n\n  const actionWith = data => {\n    const finalAction = Object.assign({}, action, data)\n    delete finalAction[CALL_API]\n    return finalAction\n  }\n\n  const [ requestType, successType, failureType ] = types\n  next(actionWith({ type: requestType }))\n\n  return callApi(endpoint, schema).then(\n    response => next(actionWith({\n      response,\n      type: successType\n    })),\n    error => next(actionWith({\n      type: failureType,\n      error: error.message || 'Something bad happened'\n    }))\n  )\n}\n","const DEFAULT_CART_STATE = {\n  lineItems: []\n};\n\nexport default function cartReducer(state = DEFAULT_CART_STATE, action) {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const newLineItems = state.lineItems.slice();\n      const foundIndex = state.lineItems.findIndex((item) =>\n        item.itemId === action.payload.itemId\n      );\n      \n      (foundIndex !== -1) \n        ? newLineItems[foundIndex].quantity += action.payload.quantity\n        : newLineItems.push(action.payload);\n      \n      return {\n        ...state,\n        lineItems: newLineItems\n      }\n    \n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport cartReducer from \"./cart\";\n\nconst rootReducer = combineReducers({\n  cart: cartReducer\n});\n\nexport default rootReducer;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Root from './containers/Root'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore()\n\nrender(\n  <Router>\n    <Root store={store} />\n  </Router>,\n  document.getElementById('root')\n)\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport api from \"../middleware/api\";\nimport rootReducer from \"../reducers\";\nimport DevTools from \"../containers/DevTools\";\n\nconst configureStore = (preloadedState) => {\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    compose(applyMiddleware(thunk, api, createLogger()), DevTools.instrument())\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"../reducers\", () => {\n      store.replaceReducer(rootReducer);\n    });\n  }\n\n  return store;\n};\n\nexport default configureStore;\n"],"sourceRoot":""}